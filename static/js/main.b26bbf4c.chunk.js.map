{"version":3,"sources":["content/WeatherForm/weatherForm.jsx","API/API.js","redux/weatherReducer.js","content/WeatherForm/WeatherContainerComponent.jsx","content/WeatherTab/weatherTab.jsx","content/WeatherTab/WeatherTabContainerComponent.jsx","content/mainPage.jsx","content/WeatherGoogleMap/map.jsx","content/WeatherGoogleMap/mapContainerComponent.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","content/mainpage.module.css"],"names":["top1000Cities","lat","lon","name","instance","axios","create","baseURL","responseType","weatherAPI","API_KEY","getCityWeather","city","get","this","then","response","getCoordinatesWeather","CURRENT_CITY_WEATHER_FORECAST","COORDINATE_WEATHER_FORECAST","initialState","weatherForecast","currentCityWeatherForecast","searchWeatherByCityThunk","dispatch","status","data","type","searchWeatherByCity","searchWeatherByCoordinatesThunk","searchWeatherByCoordinates","weatherReducer","state","action","stateCopy","WeatherContainerComponent","connect","props","Autocomplete","id","options","getOptionLabel","option","style","width","renderInput","params","TextField","label","variant","onChange","event","newValue","useStyles","makeStyles","root","maxWidth","minWidth","marginTop","WeatherTab","classes","FahrenheitToCelsius","tF","Math","round","String","fromCharCode","Card","className","CardActionArea","clouds","all","CardMedia","component","alt","height","image","title","CardContent","Typography","gutterBottom","color","main","temp_max","temp_min","feels_like","pressure","humidity","WeatherForecastView","i","weatherData","map","forecast","React","Component","WeatherTabContainerComponent","weather","Content","s","contentWrapper","input","ContentContainer","Maps","default","center","lng","zoom","bootstrapURLKeys","key","defaultCenter","defaultZoom","onClick","childProps","WeatherMapContainerComponent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b26bbf4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\n\r\nconst top1000Cities = [\r\n    {lat:\"44.4197222\", lon:\"34.0430556\", name:\"Алупка\" },\r\n    {lat:\"44.6637211\", lon:\"34.405013\", name:\"Алушта\" },\r\n    {lat:\"46.1072222\", lon:\"33.6933333\", name:\"Армянск\" },\r\n    {lat:\"44.7527778\", lon:\"33.8608333\", name:\"Бахчисарай\" },\r\n    {lat:\"45.0544444\", lon:\"34.6022222\", name:\"Белогорск\" },\r\n    {lat:\"45.7086111\", lon:\"34.3933333\", name:\"Джанкой\" },\r\n    {lat:\"45.2036111\", lon:\"33.3613889\", name:\"Евпатория\" },\r\n    {lat:\"45.33786\", lon:\"36.458401\", name:\"Керчь\" },\r\n    {lat:\"45.962849\", lon:\"33.787121\", name:\"Красноперекопск\" },\r\n    {lat:\"45.1336111\", lon:\"33.5772222\", name:\"Саки\" },\r\n    {lat:\"44.60000001\", lon:\"33.533333343333\", name:\"Севастополь\" },\r\n    {lat:\"44.9480556\", lon:\"34.1041667\", name:\"Симферополь\" },\r\n    {lat:\"45.0291667\", lon:\"35.0886111\", name:\"Старый Крым\" },\r\n    {lat:\"44.858799\", lon:\"34.974979\", name:\"Судак\" },\r\n    {lat:\"45.0488889\", lon:\"35.3791667\", name:\"Феодосия\" },\r\n    {lat:\"45.4281023\", lon:\"35.8165187\", name:\"Щёлкино\" },\r\n    {lat:\"44.4994444\", lon:\"34.1552778\", name:\"Ялта\" },\r\n    {lat:\"49.630283\", lon:\"27.001648\", name:\"Бар\" },\r\n    {lat:\"48.368954\", lon:\"29.5331654\", name:\"Бершадь\" },\r\n    {lat:\"49.2333333\", lon:\"28.4833333\", name:\"Винница\" },\r\n    {lat:\"48.8094444\", lon:\"29.3905556\", name:\"Гайсин\" },\r\n    {lat:\"49.038349\", lon:\"28.10556\", name:\"Жмеринка\" },\r\n    {lat:\"49.711769\", lon:\"28.842859\", name:\"Казатин\" },\r\n    {lat:\"49.4472222\", lon:\"28.5230556\", name:\"Калиновка\" },\r\n    {lat:\"48.676151\", lon:\"29.262541\", name:\"Ладыжин\" },\r\n    {lat:\"48.45\", lon:\"27.8\", name:\"Могилёв-Подольский\" },\r\n    {lat:\"48.9726621\", lon:\"28.835666\", name:\"Немиров\" },\r\n    {lat:\"49.4833333\", lon:\"29.2666667\", name:\"Погребище\" },\r\n    {lat:\"48.68\", lon:\"28.87\", name:\"Тульчин\" },\r\n    {lat:\"49.563469\", lon:\"27.959379\", name:\"Хмельник\" },\r\n    {lat:\"48.73761\", lon:\"28.08688\", name:\"Шаргород\" },\r\n    {lat:\"49.9572775\", lon:\"26.2290711\", name:\"Ямполь\" },\r\n    {lat:\"50.3505636\", lon:\"25.1007738\", name:\"Берестечко\" },\r\n    {lat:\"50.853578\", lon:\"24.311783\", name:\"Владимир-Волынский\" },\r\n    {lat:\"50.500622\", lon:\"24.767559\", name:\"Горохов\" },\r\n    {lat:\"51.6241667\", lon:\"24.9605556\", name:\"Камень-Каширский\" },\r\n    {lat:\"50.833621\", lon:\"25.460706\", name:\"Киверцы\" },\r\n    {lat:\"51.212898\", lon:\"24.71343\", name:\"Ковель\" },\r\n    {lat:\"50.75\", lon:\"25.3358333\", name:\"Луцк\" },\r\n    {lat:\"51.2230556\", lon:\"24.0377778\", name:\"Любомль\" },\r\n    {lat:\"50.7333333\", lon:\"24.1666667\", name:\"Нововолынск\" },\r\n    {lat:\"50.915901\", lon:\"25.268551\", name:\"Рожище\" },\r\n    {lat:\"50.86\", lon:\"24.15\", name:\"Устилуг\" },\r\n    {lat:\"47.65815\", lon:\"33.697819\", name:\"Апостолово\" },\r\n    {lat:\"48.6561111\", lon:\"34.3283333\", name:\"Верхнеднепровск\" },\r\n    {lat:\"48.4833333\", lon:\"34.0166667\", name:\"Вольногорск\" },\r\n    {lat:\"48.5166667\", lon:\"34.6166667\", name:\"Днепродзержинск\" },\r\n    {lat:\"48.45\", lon:\"34.9833333\", name:\"Днепропетровск\" },\r\n    {lat:\"48.35\", lon:\"33.5\", name:\"Жёлтые Воды\" },\r\n    {lat:\"47.899726\", lon:\"33.379534\", name:\"Кривой Рог\" },\r\n    {lat:\"47.6397222\", lon:\"34.6363889\", name:\"Марганец\" },\r\n    {lat:\"47.5666667\", lon:\"34.4\", name:\"Никополь\" },\r\n    {lat:\"48.6333333\", lon:\"35.2166667\", name:\"Новомосковск\" },\r\n    {lat:\"44.9643961\", lon:\"35.3569007\", name:\"Орджоникидзе\" },\r\n    {lat:\"48.533939\", lon:\"35.869282\", name:\"Павлоград\" },\r\n    {lat:\"49.016251\", lon:\"35.371681\", name:\"Перещепино\" },\r\n    {lat:\"48.3463889\", lon:\"36.4044444\", name:\"Першотравенск\" },\r\n    {lat:\"49.5355598\", lon:\"25.5276081\", name:\"Подгородное\" },\r\n    {lat:\"48.4113889\", lon:\"33.7105556\", name:\"Пятихатки\" },\r\n    {lat:\"48.3177778\", lon:\"35.5119444\", name:\"Синельниково\" },\r\n    {lat:\"48.5402778\", lon:\"29.9677778\", name:\"Терновка\" },\r\n    {lat:\"48.1333333\", lon:\"37.7333333\", name:\"Авдеевка\" },\r\n    {lat:\"48.599072\", lon:\"37.999241\", name:\"Артёмовск\" },\r\n    {lat:\"47.596119\", lon:\"37.490429\", name:\"Волноваха\" },\r\n    {lat:\"48.346432\", lon:\"38.059513\", name:\"Горловка\" },\r\n    {lat:\"48.4\", lon:\"37.8333333\", name:\"Дзержинск\" },\r\n    {lat:\"48.3333333\", lon:\"38.4\", name:\"Дебальцево\" },\r\n    {lat:\"48.32357\", lon:\"37.291854\", name:\"Димитров\" },\r\n    {lat:\"48.4691324\", lon:\"37.0871223\", name:\"Доброполье\" },\r\n    {lat:\"47.770821\", lon:\"37.684361\", name:\"Докучаевск\" },\r\n    {lat:\"48.0027778\", lon:\"37.8052778\", name:\"Донецк\" },\r\n    {lat:\"48.6166667\", lon:\"37.5333333\", name:\"Дружковка\" },\r\n    {lat:\"48.2166667\", lon:\"38.2\", name:\"Енакиево\" },\r\n    {lat:\"48.1462985\", lon:\"38.2540176\", name:\"Ждановка\" },\r\n    {lat:\"48.0166667\", lon:\"38.2666667\", name:\"Зугрэс\" },\r\n    {lat:\"48.15\", lon:\"38.3666667\", name:\"Кировское\" },\r\n    {lat:\"48.736462\", lon:\"37.57164\", name:\"Краматорск\" },\r\n    {lat:\"48.2827778\", lon:\"37.1827778\", name:\"Красноармейск\" },\r\n    {lat:\"48.984211\", lon:\"37.810329\", name:\"Красный Лиман\" },\r\n    {lat:\"48.51545\", lon:\"37.703629\", name:\"Константиновка\" },\r\n    {lat:\"47.1166667\", lon:\"37.55\", name:\"Мариуполь\" },\r\n    {lat:\"48.076179\", lon:\"38.068427\", name:\"Макеевка\" },\r\n    {lat:\"48.2045408\", lon:\"37.336821\", name:\"Новогродовка\" },\r\n    {lat:\"48.144671\", lon:\"37.297897\", name:\"Селидово\" },\r\n    {lat:\"48.846851\", lon:\"37.57954\", name:\"Славянск\" },\r\n    {lat:\"48.0282789\", lon:\"38.7656122\", name:\"Снежное\" },\r\n    {lat:\"48.6833333\", lon:\"38.1\", name:\"Соледар\" },\r\n    {lat:\"48.0166667\", lon:\"38.6333333\", name:\"Торез\" },\r\n    {lat:\"47.7833333\", lon:\"37.25\", name:\"Угледар\" },\r\n    {lat:\"48.037411\", lon:\"38.160301\", name:\"Харцызск\" },\r\n    {lat:\"48.0333333\", lon:\"38.4833333\", name:\"Шахтёрск\" },\r\n    {lat:\"48.1221425\", lon:\"37.8765944\", name:\"Ясиноватая\" },\r\n    {lat:\"50.0166667\", lon:\"29.0166667\", name:\"Андрушёвка\" },\r\n    {lat:\"50.30204\", lon:\"27.67634\", name:\"Барановка\" },\r\n    {lat:\"49.903381\", lon:\"28.599251\", name:\"Бердичев\" },\r\n    {lat:\"50.259749\", lon:\"28.676248\", name:\"Житомир\" },\r\n    {lat:\"50.95\", lon:\"28.6333333\", name:\"Коростень\" },\r\n    {lat:\"50.316639\", lon:\"29.06653\", name:\"Коростышев\" },\r\n    {lat:\"50.77121\", lon:\"29.25297\", name:\"Малин\" },\r\n    {lat:\"50.59256\", lon:\"27.62348\", name:\"Новоград-Волынский\" },\r\n    {lat:\"51.327251\", lon:\"28.818979\", name:\"Овруч\" },\r\n    {lat:\"50.4947222\", lon:\"29.2333333\", name:\"Радомышль\" },\r\n    {lat:\"48.2\", lon:\"22.6333333\", name:\"Берегово\" },\r\n    {lat:\"48.138142\", lon:\"23.041519\", name:\"Виноградов\" },\r\n    {lat:\"48.310911\", lon:\"23.037711\", name:\"Иршава\" },\r\n    {lat:\"48.442411\", lon:\"22.723352\", name:\"Мукачево\" },\r\n    {lat:\"48.7341667\", lon:\"22.4741667\", name:\"Перечин\" },\r\n    {lat:\"48.060829\", lon:\"24.205059\", name:\"Рахов\" },\r\n    {lat:\"48.5472222\", lon:\"22.9861111\", name:\"Свалява\" },\r\n    {lat:\"48.0113889\", lon:\"23.5722222\", name:\"Тячев\" },\r\n    {lat:\"48.6166667\", lon:\"22.3\", name:\"Ужгород\" },\r\n    {lat:\"48.1813889\", lon:\"23.2977778\", name:\"Хуст\" },\r\n    {lat:\"48.4333333\", lon:\"22.2\", name:\"Чоп\" },\r\n    {lat:\"46.748581\", lon:\"36.809502\", name:\"Бердянск\" },\r\n    {lat:\"47.433708\", lon:\"35.27816\", name:\"Васильевка\" },\r\n    {lat:\"47.9419444\", lon:\"35.4280556\", name:\"Вольнянск\" },\r\n    {lat:\"47.658562\", lon:\"36.252918\", name:\"Гуляйполе\" },\r\n    {lat:\"47.3840983\", lon:\"34.98121\", name:\"Днепрорудное\" },\r\n    {lat:\"47.853748\", lon:\"35.157139\", name:\"Запорожье\" },\r\n    {lat:\"47.488911\", lon:\"34.400761\", name:\"Каменка-Днепровская\" },\r\n    {lat:\"46.847839\", lon:\"35.364979\", name:\"Мелитополь\" },\r\n    {lat:\"47.206982\", lon:\"35.59618\", name:\"Молочанск\" },\r\n    {lat:\"47.5666667\", lon:\"35.7833333\", name:\"Орехов\" },\r\n    {lat:\"47.47728\", lon:\"36.25626\", name:\"Пологи\" },\r\n    {lat:\"46.7333333\", lon:\"36.35\", name:\"Приморск\" },\r\n    {lat:\"47.25\", lon:\"35.7\", name:\"Токмак\" },\r\n    {lat:\"47.4979877\", lon:\"34.6565334\", name:\"Энергодар\" },\r\n    {lat:\"49.070011\", lon:\"23.864719\", name:\"Болехов\" },\r\n    {lat:\"49.263802\", lon:\"24.634211\", name:\"Бурштын\" },\r\n    {lat:\"49.1247222\", lon:\"24.7286111\", name:\"Галич\" },\r\n    {lat:\"48.6675\", lon:\"25.5002778\", name:\"Городенка\" },\r\n    {lat:\"51.79\", lon:\"33.76\", name:\"Долина\" },\r\n    {lat:\"48.9166667\", lon:\"24.7166667\", name:\"Ивано-Франковск\" },\r\n    {lat:\"49.050465\", lon:\"24.374117\", name:\"Калуш\" },\r\n    {lat:\"48.53146\", lon:\"25.039709\", name:\"Коломыя\" },\r\n    {lat:\"48.315\", lon:\"25.0952778\", name:\"Косов\" },\r\n    {lat:\"48.6333333\", lon:\"24.5833333\", name:\"Надворная\" },\r\n    {lat:\"49.411449\", lon:\"24.62051\", name:\"Рогатин\" },\r\n    {lat:\"48.45\", lon:\"25.5666667\", name:\"Снятын\" },\r\n    {lat:\"48.9008333\", lon:\"24.8491667\", name:\"Тысменица\" },\r\n    {lat:\"48.8666667\", lon:\"25.0\", name:\"Тлумач\" },\r\n    {lat:\"48.449523\", lon:\"24.557508\", name:\"Яремче\" },\r\n    {lat:\"49.7988889\", lon:\"30.1152778\", name:\"Белая Церковь\" },\r\n    {lat:\"50.3197222\", lon:\"31.47\", name:\"Березань\" },\r\n    {lat:\"49.541031\", lon:\"30.88073\", name:\"Богуслав\" },\r\n    {lat:\"50.350491\", lon:\"30.960739\", name:\"Борисполь\" },\r\n    {lat:\"49.323518\", lon:\"30.700165\", name:\"Боярка\" },\r\n    {lat:\"50.5166667\", lon:\"30.8166667\", name:\"Бровары\" },\r\n    {lat:\"50.5569165\", lon:\"30.2230733\", name:\"Буча\" },\r\n    {lat:\"50.178959\", lon:\"30.32715\", name:\"Васильков\" },\r\n    {lat:\"50.4377778\", lon:\"33.3822222\", name:\"Вишнёвое\" },\r\n    {lat:\"50.5833333\", lon:\"30.5\", name:\"Вышгород\" },\r\n    {lat:\"50.5166667\", lon:\"30.25\", name:\"Ирпень\" },\r\n    {lat:\"49.85722\", lon:\"30.82032\", name:\"Кагарлык\" },\r\n    {lat:\"50.584981\", lon:\"30.235748\", name:\"Киев\" },\r\n    {lat:\"49.661022\", lon:\"30.98458\", name:\"Мироновка\" },\r\n    {lat:\"50.105728\", lon:\"30.630699\", name:\"Обухов\" },\r\n    {lat:\"50.070141\", lon:\"31.45775\", name:\"Переяслав-Хмельницкий\" },\r\n    {lat:\"51.4977778\", lon:\"24.1180556\", name:\"Припять\" },\r\n    {lat:\"49.972801\", lon:\"31.04777\", name:\"Ржищев\" },\r\n    {lat:\"49.73719\", lon:\"29.66901\", name:\"Сквира\" },\r\n    {lat:\"51.523777\", lon:\"30.768559\", name:\"Славутич\" },\r\n    {lat:\"49.56065\", lon:\"30.510309\", name:\"Тараща\" },\r\n    {lat:\"49.370575\", lon:\"29.680221\", name:\"Тетиев\" },\r\n    {lat:\"49.820228\", lon:\"30.438929\", name:\"Узин\" },\r\n    {lat:\"50.1530861\", lon:\"30.7434917\", name:\"Украинка\" },\r\n    {lat:\"50.0833333\", lon:\"29.9166667\", name:\"Фастов\" },\r\n    {lat:\"51.2666667\", lon:\"30.2166667\", name:\"Чернобыль\" },\r\n    {lat:\"50.244949\", lon:\"31.796261\", name:\"Яготин\" },\r\n    {lat:\"48.6666667\", lon:\"33.1166667\", name:\"Александрия\" },\r\n    {lat:\"48.050861\", lon:\"32.16589\", name:\"Бобринец\" },\r\n    {lat:\"48.3333333\", lon:\"29.8666667\", name:\"Гайворон\" },\r\n    {lat:\"48.1108333\", lon:\"32.7647222\", name:\"Долинская\" },\r\n    {lat:\"48.7166667\", lon:\"32.6666667\", name:\"Знаменка\" },\r\n    {lat:\"48.508389\", lon:\"32.264801\", name:\"Кировоград\" },\r\n    {lat:\"48.65\", lon:\"31.6333333\", name:\"Малая Виска\" },\r\n    {lat:\"48.7833333\", lon:\"31.65\", name:\"Новомиргород\" },\r\n    {lat:\"48.3155556\", lon:\"31.5269444\", name:\"Новоукраинка\" },\r\n    {lat:\"49.0502778\", lon:\"33.2419444\", name:\"Светловодск\" },\r\n    {lat:\"48.5861652\", lon:\"39.1949396\", name:\"Александровск\" },\r\n    {lat:\"48.5166667\", lon:\"38.5833333\", name:\"Алмазная\" },\r\n    {lat:\"48.4666667\", lon:\"38.8\", name:\"Алчевск\" },\r\n    {lat:\"48.1166667\", lon:\"39.0833333\", name:\"Антрацит\" },\r\n    {lat:\"48.5133333\", lon:\"38.6430556\", name:\"Брянка\" },\r\n    {lat:\"48.174579\", lon:\"38.837224\", name:\"Вахрушево\" },\r\n    {lat:\"49.1805556\", lon:\"23.7341667\", name:\"Горное\" },\r\n    {lat:\"48.5833333\", lon:\"38.9333333\", name:\"Зимогорье\" },\r\n    {lat:\"48.6928568\", lon:\"38.5146349\", name:\"Золотое\" },\r\n    {lat:\"48.4131636\", lon:\"38.6204799\", name:\"Зоринск\" },\r\n    {lat:\"48.29607\", lon:\"39.745239\", name:\"Краснодон\" },\r\n    {lat:\"48.134041\", lon:\"38.931419\", name:\"Красный Луч\" },\r\n    {lat:\"48.896895\", lon:\"38.444143\", name:\"Лисичанск\" },\r\n    {lat:\"48.573269\", lon:\"39.355659\", name:\"Луганск\" },\r\n    {lat:\"48.4019444\", lon:\"39.2102778\", name:\"Лутугино\" },\r\n    {lat:\"48.07\", lon:\"38.9\", name:\"Миусинск\" },\r\n    {lat:\"48.3444444\", lon:\"39.6583333\", name:\"Молодогвардейск\" },\r\n    {lat:\"48.9666667\", lon:\"38.35\", name:\"Новодружеск\" },\r\n    {lat:\"49.544731\", lon:\"39.103889\", name:\"Новопсков\" },\r\n    {lat:\"48.05\", lon:\"30.85\", name:\"Первомайск\" },\r\n    {lat:\"48.4388889\", lon:\"38.8194444\", name:\"Перевальск\" },\r\n    {lat:\"48.293331\", lon:\"38.888614\", name:\"Петровское\" },\r\n    {lat:\"48.6333333\", lon:\"38.38\", name:\"Попасная\" },\r\n    {lat:\"49.016706\", lon:\"38.302668\", name:\"Приволье\" },\r\n    {lat:\"48.0833333\", lon:\"39.3666667\", name:\"Ровеньки\" },\r\n    {lat:\"49.0166667\", lon:\"38.3666667\", name:\"Рубежное\" },\r\n    {lat:\"49.41011\", lon:\"38.15258\", name:\"Сватово\" },\r\n    {lat:\"48.084549\", lon:\"39.65163\", name:\"Свердловск\" },\r\n    {lat:\"48.950191\", lon:\"38.497631\", name:\"Северодонецк\" },\r\n    {lat:\"49.2666667\", lon:\"38.9166667\", name:\"Старобельск\" },\r\n    {lat:\"48.5666667\", lon:\"38.65\", name:\"Стаханов\" },\r\n    {lat:\"48.3523068\", lon:\"39.7239205\", name:\"Суходольск\" },\r\n    {lat:\"48.737247\", lon:\"39.2311974\", name:\"Счастье\" },\r\n    {lat:\"48.600487\", lon:\"38.5920825\", name:\"Теплогорск\" },\r\n    {lat:\"48.095566\", lon:\"39.759607\", name:\"Червонопартизанск\" },\r\n    {lat:\"50.380501\", lon:\"24.01269\", name:\"Белз\" },\r\n    {lat:\"49.6331904\", lon:\"24.2907476\", name:\"Бобрка\" },\r\n    {lat:\"49.28476\", lon:\"23.42137\", name:\"Борислав\" },\r\n    {lat:\"50.0833333\", lon:\"25.15\", name:\"Броды\" },\r\n    {lat:\"49.9666667\", lon:\"24.6333333\", name:\"Буск\" },\r\n    {lat:\"50.24\", lon:\"24.1394444\", name:\"Великие Мосты\" },\r\n    {lat:\"49.8233333\", lon:\"24.5166667\", name:\"Глиняны\" },\r\n    {lat:\"49.1666667\", lon:\"26.5666667\", name:\"Городок\" },\r\n    {lat:\"49.5666667\", lon:\"22.7833333\", name:\"Добромиль\" },\r\n    {lat:\"49.34853\", lon:\"23.51647\", name:\"Дрогобыч\" },\r\n    {lat:\"49.8833333\", lon:\"24.0833333\", name:\"Дубляны\" },\r\n    {lat:\"49.3813889\", lon:\"24.1408333\", name:\"Жидачов\" },\r\n    {lat:\"50.0666667\", lon:\"23.9666667\", name:\"Жолква\" },\r\n    {lat:\"49.8083333\", lon:\"24.9011111\", name:\"Золочев\" },\r\n    {lat:\"50.1\", lon:\"24.35\", name:\"Каменка-Бугская\" },\r\n    {lat:\"49.85\", lon:\"24.0166667\", name:\"Львов\" },\r\n    {lat:\"49.7941667\", lon:\"23.1525\", name:\"Мостиска\" },\r\n    {lat:\"49.67\", lon:\"24.5594444\", name:\"Перемышляны\" },\r\n    {lat:\"49.7138889\", lon:\"23.9108333\", name:\"Пустомыты\" },\r\n    {lat:\"50.230431\", lon:\"23.628309\", name:\"Рава-Русская\" },\r\n    {lat:\"50.2827778\", lon:\"24.6375\", name:\"Радехов\" },\r\n    {lat:\"49.6530556\", lon:\"23.4880556\", name:\"Рудки\" },\r\n    {lat:\"49.5166667\", lon:\"23.2027778\", name:\"Самбор\" },\r\n    {lat:\"49.036049\", lon:\"23.51232\", name:\"Сколе\" },\r\n    {lat:\"50.4833333\", lon:\"24.2833333\", name:\"Сокаль\" },\r\n    {lat:\"49.4430556\", lon:\"23.0033333\", name:\"Старый Самбор\" },\r\n    {lat:\"49.256171\", lon:\"23.850306\", name:\"Стрый\" },\r\n    {lat:\"49.2805556\", lon:\"23.505\", name:\"Трускавец\" },\r\n    {lat:\"50.3666667\", lon:\"23.7444444\", name:\"Угнев\" },\r\n    {lat:\"49.5333333\", lon:\"22.85\", name:\"Хыров\" },\r\n    {lat:\"50.3833333\", lon:\"24.2333333\", name:\"Червоноград\" },\r\n    {lat:\"49.942501\", lon:\"23.390989\", name:\"Яворов\" },\r\n    {lat:\"47.404331\", lon:\"32.445301\", name:\"Баштанка\" },\r\n    {lat:\"47.587711\", lon:\"31.336\", name:\"Вознесенск\" },\r\n    {lat:\"46.9666667\", lon:\"32.0\", name:\"Николаев\" },\r\n    {lat:\"47.3166667\", lon:\"31.7833333\", name:\"Новая Одесса\" },\r\n    {lat:\"47.6833333\", lon:\"32.5\", name:\"Новый Буг\" },\r\n    {lat:\"46.6166667\", lon:\"31.55\", name:\"Очаков\" },\r\n    {lat:\"48.05\", lon:\"30.85\", name:\"Первомайск\" },\r\n    {lat:\"47.0666667\", lon:\"32.8166667\", name:\"Снигирёвка\" },\r\n    {lat:\"47.8166667\", lon:\"31.1833333\", name:\"Южноукраинск\" },\r\n    {lat:\"47.7173\", lon:\"29.975639\", name:\"Ананьев\" },\r\n    {lat:\"45.99739\", lon:\"29.431288\", name:\"Арциз\" },\r\n    {lat:\"47.9333333\", lon:\"29.6166667\", name:\"Балта\" },\r\n    {lat:\"46.1833333\", lon:\"30.3333333\", name:\"Белгород-Днестровский\" },\r\n    {lat:\"45.682701\", lon:\"28.61935\", name:\"Болград\" },\r\n    {lat:\"45.3516667\", lon:\"28.8363889\", name:\"Измаил\" },\r\n    {lat:\"46.3020534\", lon:\"30.6517391\", name:\"Ильичёвск\" },\r\n    {lat:\"45.45578\", lon:\"29.273291\", name:\"Килия\" },\r\n    {lat:\"48.093941\", lon:\"29.13368\", name:\"Кодыма\" },\r\n    {lat:\"47.75\", lon:\"29.5333333\", name:\"Котовск\" },\r\n    {lat:\"46.4666667\", lon:\"30.7333333\", name:\"Одесса\" },\r\n    {lat:\"45.841418\", lon:\"29.62284\", name:\"Татарбунары\" },\r\n    {lat:\"46.5\", lon:\"30.3333333\", name:\"Теплодар\" },\r\n    {lat:\"47.8173262\", lon:\"33.5737487\", name:\"Южное\" },\r\n    {lat:\"50.3666667\", lon:\"34.0\", name:\"Гадяч\" },\r\n    {lat:\"49.3833333\", lon:\"33.2833333\", name:\"Глобино\" },\r\n    {lat:\"50.116852\", lon:\"32.44059\", name:\"Гребёнка\" },\r\n    {lat:\"50.20955\", lon:\"34.362345\", name:\"Зеньков\" },\r\n    {lat:\"49.45\", lon:\"35.1333333\", name:\"Карловка\" },\r\n    {lat:\"49.073521\", lon:\"33.4231\", name:\"Кременчуг\" },\r\n    {lat:\"49.145439\", lon:\"34.213638\", name:\"Кобеляки\" },\r\n    {lat:\"49.013756\", lon:\"33.643381\", name:\"Комсомольск\" },\r\n    {lat:\"50.36319\", lon:\"33.253288\", name:\"Лохвица\" },\r\n    {lat:\"50.0166667\", lon:\"33.0\", name:\"Лубны\" },\r\n    {lat:\"49.963799\", lon:\"33.61869\", name:\"Миргород\" },\r\n    {lat:\"50.23975\", lon:\"32.514309\", name:\"Пирятин\" },\r\n    {lat:\"49.59269\", lon:\"34.551159\", name:\"Полтава\" },\r\n    {lat:\"49.790279\", lon:\"33.207809\", name:\"Хорол\" },\r\n    {lat:\"50.4\", lon:\"33.4\", name:\"Червонозаводское\" },\r\n    {lat:\"51.0\", lon:\"26.75\", name:\"Березне\" },\r\n    {lat:\"50.38738\", lon:\"25.754559\", name:\"Дубно\" },\r\n    {lat:\"51.571209\", lon:\"26.56805\", name:\"Дубровица\" },\r\n    {lat:\"50.5166667\", lon:\"26.25\", name:\"Здолбунов\" },\r\n    {lat:\"50.619129\", lon:\"27.161869\", name:\"Корец\" },\r\n    {lat:\"50.8833333\", lon:\"26.45\", name:\"Костополь\" },\r\n    {lat:\"51.3436553\", lon:\"25.8490867\", name:\"Кузнецовск\" },\r\n    {lat:\"50.3333333\", lon:\"26.5166667\", name:\"Острог\" },\r\n    {lat:\"50.125777\", lon:\"25.264195\", name:\"Радивилов\" },\r\n    {lat:\"50.6166667\", lon:\"26.25\", name:\"Ровно\" },\r\n    {lat:\"51.3372222\", lon:\"26.6058333\", name:\"Сарны\" },\r\n    {lat:\"50.29855\", lon:\"34.892052\", name:\"Ахтырка\" },\r\n    {lat:\"51.149402\", lon:\"34.3175225\", name:\"Белополье\" },\r\n    {lat:\"51.1978\", lon:\"33.847351\", name:\"Бурынь\" },\r\n    {lat:\"51.6786111\", lon:\"33.9113889\", name:\"Глухов\" },\r\n    {lat:\"51.550121\", lon:\"33.38279\", name:\"Кролевец\" },\r\n    {lat:\"51.237469\", lon:\"33.21217\", name:\"Конотоп\" },\r\n    {lat:\"48.96\", lon:\"31.52\", name:\"Лебедин\" },\r\n    {lat:\"51.337589\", lon:\"33.87888\", name:\"Путивль\" },\r\n    {lat:\"50.743919\", lon:\"33.475712\", name:\"Ромны\" },\r\n    {lat:\"52.1833333\", lon:\"34.0333333\", name:\"Середина-Буда\" },\r\n    {lat:\"50.910561\", lon:\"34.80566\", name:\"Сумы\" },\r\n    {lat:\"50.9599282\", lon:\"25.55378\", name:\"Тростянец\" },\r\n    {lat:\"51.86282\", lon:\"33.487831\", name:\"Шостка\" },\r\n    {lat:\"49.444191\", lon:\"24.94486\", name:\"Бережаны\" },\r\n    {lat:\"48.803181\", lon:\"26.041809\", name:\"Борщёв\" },\r\n    {lat:\"49.05772\", lon:\"25.401979\", name:\"Бучач\" },\r\n    {lat:\"48.65\", lon:\"25.7333333\", name:\"Залещики\" },\r\n    {lat:\"49.6666667\", lon:\"25.7777778\", name:\"Збараж\" },\r\n    {lat:\"49.660696\", lon:\"25.1434667\", name:\"Зборов\" },\r\n    {lat:\"50.099129\", lon:\"25.7328\", name:\"Кременец\" },\r\n    {lat:\"49.8659402\", lon:\"26.0841931\", name:\"Лановцы\" },\r\n    {lat:\"49.0888889\", lon:\"25.1694444\", name:\"Монастыриска\" },\r\n    {lat:\"49.5246859\", lon:\"26.137326\", name:\"Подволочиск\" },\r\n    {lat:\"49.2694444\", lon:\"25.1361111\", name:\"Подгайцы\" },\r\n    {lat:\"50.0\", lon:\"25.5083333\", name:\"Почаев\" },\r\n    {lat:\"49.424214\", lon:\"25.976246\", name:\"Скалат\" },\r\n    {lat:\"49.551361\", lon:\"25.603979\", name:\"Тернополь\" },\r\n    {lat:\"49.29348\", lon:\"25.699551\", name:\"Теребовля\" },\r\n    {lat:\"49.0166667\", lon:\"25.8\", name:\"Чортков\" },\r\n    {lat:\"50.122577\", lon:\"26.1149716\", name:\"Шумск\" },\r\n    {lat:\"49.4658333\", lon:\"36.8677778\", name:\"Балаклея\" },\r\n    {lat:\"48.9\", lon:\"37.0166667\", name:\"Барвенково\" },\r\n    {lat:\"50.1654302\", lon:\"35.5267251\", name:\"Богодухов\" },\r\n    {lat:\"49.843601\", lon:\"35.61388\", name:\"Валки\" },\r\n    {lat:\"50.0455556\", lon:\"37.3905556\", name:\"Великий Бурлук\" },\r\n    {lat:\"50.278519\", lon:\"36.945171\", name:\"Волчанск\" },\r\n    {lat:\"50.110668\", lon:\"36.114361\", name:\"Дергачи\" },\r\n    {lat:\"49.701939\", lon:\"36.355171\", name:\"Змиев\" },\r\n    {lat:\"49.2127778\", lon:\"37.2569444\", name:\"Изюм\" },\r\n    {lat:\"49.3666667\", lon:\"35.45\", name:\"Красноград\" },\r\n    {lat:\"49.721901\", lon:\"37.624329\", name:\"Купянск\" },\r\n    {lat:\"48.891684\", lon:\"36.325786\", name:\"Лозовая\" },\r\n    {lat:\"49.95\", lon:\"35.9166667\", name:\"Люботин\" },\r\n    {lat:\"49.8166667\", lon:\"36.05\", name:\"Мерефа\" },\r\n    {lat:\"49.3833333\", lon:\"36.2166667\", name:\"Первомайский\" },\r\n    {lat:\"49.98967\", lon:\"36.208309\", name:\"Харьков\" },\r\n    {lat:\"49.8355556\", lon:\"36.6863889\", name:\"Чугуев\" },\r\n    {lat:\"46.843822\", lon:\"33.4375\", name:\"Берислав\" },\r\n    {lat:\"46.171638\", lon:\"34.80777\", name:\"Геническ\" },\r\n    {lat:\"46.5166667\", lon:\"32.5166667\", name:\"Голая Пристань\" },\r\n    {lat:\"46.817388\", lon:\"33.494325\", name:\"Каховка\" },\r\n    {lat:\"46.7666667\", lon:\"33.3666667\", name:\"Новая Каховка\" },\r\n    {lat:\"46.116871\", lon:\"32.913731\", name:\"Скадовск\" },\r\n    {lat:\"46.7528018\", lon:\"33.4216856\", name:\"Таврийск\" },\r\n    {lat:\"46.653368\", lon:\"32.629424\", name:\"Херсон\" },\r\n    {lat:\"46.62\", lon:\"32.72\", name:\"Цюрупинск\" },\r\n    {lat:\"49.535179\", lon:\"26.22331\", name:\"Волочиск\" },\r\n    {lat:\"49.1666667\", lon:\"26.5666667\", name:\"Городок\" },\r\n    {lat:\"49.267071\", lon:\"27.440269\", name:\"Деражня\" },\r\n    {lat:\"48.8909743\", lon:\"26.8546608\", name:\"Дунаевцы\" },\r\n    {lat:\"50.119221\", lon:\"26.82629\", name:\"Изяслав\" },\r\n    {lat:\"48.6833333\", lon:\"26.5833333\", name:\"Каменец-Подольский\" },\r\n    {lat:\"49.6519444\", lon:\"26.9705556\", name:\"Красилов\" },\r\n    {lat:\"50.3374232\", lon:\"26.6404529\", name:\"Нетешин\" },\r\n    {lat:\"50.122269\", lon:\"27.511909\", name:\"Полонное\" },\r\n    {lat:\"49.0563905\", lon:\"27.3944506\", name:\"Славута\" },\r\n    {lat:\"49.7555556\", lon:\"27.2208333\", name:\"Староконстантинов\" },\r\n    {lat:\"49.4166667\", lon:\"27.0\", name:\"Хмельницкий\" },\r\n    {lat:\"50.179131\", lon:\"27.07732\", name:\"Шепетовка\" },\r\n    {lat:\"49.0166667\", lon:\"31.0666667\", name:\"Ватутино\" },\r\n    {lat:\"49.290649\", lon:\"31.443199\", name:\"Городище\" },\r\n    {lat:\"49.245522\", lon:\"30.11998\", name:\"Жашков\" },\r\n    {lat:\"49.075489\", lon:\"30.967911\", name:\"Звенигородка\" },\r\n    {lat:\"49.674271\", lon:\"32.040421\", name:\"Золотоноша\" },\r\n    {lat:\"49.036347\", lon:\"32.103481\", name:\"Каменка\" },\r\n    {lat:\"49.75\", lon:\"31.4666667\", name:\"Канев\" },\r\n    {lat:\"49.421051\", lon:\"31.268993\", name:\"Корсунь-Шевченковский\" },\r\n    {lat:\"48.9909154\", lon:\"29.8051363\", name:\"Монастырище\" },\r\n    {lat:\"49.224621\", lon:\"31.878401\", name:\"Смела\" },\r\n    {lat:\"48.8833333\", lon:\"30.7\", name:\"Тальное\" },\r\n    {lat:\"48.75\", lon:\"30.2166667\", name:\"Умань\" },\r\n    {lat:\"48.8494444\", lon:\"29.97\", name:\"Христиновка\" },\r\n    {lat:\"49.4333333\", lon:\"32.0666667\", name:\"Черкассы\" },\r\n    {lat:\"49.072498\", lon:\"32.683578\", name:\"Чигирин\" },\r\n    {lat:\"49.00349\", lon:\"31.385559\", name:\"Шпола\" },\r\n    {lat:\"51.1830556\", lon:\"32.8297222\", name:\"Бахмач\" },\r\n    {lat:\"50.745\", lon:\"31.3869444\", name:\"Бобровица\" },\r\n    {lat:\"51.249451\", lon:\"32.43034\", name:\"Борзна\" },\r\n    {lat:\"51.8905556\", lon:\"31.5936111\", name:\"Городня\" },\r\n    {lat:\"50.9246667\", lon:\"30.756\", name:\"Десна\" },\r\n    {lat:\"50.863918\", lon:\"32.39307\", name:\"Ичня\" },\r\n    {lat:\"51.7754831\", lon:\"32.2595792\", name:\"Корюковка\" },\r\n    {lat:\"51.521759\", lon:\"32.21888\", name:\"Мена\" },\r\n    {lat:\"51.0380556\", lon:\"31.8861111\", name:\"Нежин\" },\r\n    {lat:\"52.0069896\", lon:\"33.2537069\", name:\"Новгород-Северский\" },\r\n    {lat:\"50.9333333\", lon:\"31.5833333\", name:\"Носовка\" },\r\n    {lat:\"50.594181\", lon:\"32.38689\", name:\"Прилуки\" },\r\n    {lat:\"51.6463023\", lon:\"31.5616846\", name:\"Седнев\" },\r\n    {lat:\"52.173561\", lon:\"32.587059\", name:\"Семёновка\" },\r\n    {lat:\"51.503653\", lon:\"31.293167\", name:\"Чернигов\" },\r\n    {lat:\"51.819321\", lon:\"31.94846\", name:\"Щорс\" },\r\n    {lat:\"48.38\", lon:\"25.51\", name:\"Вашковцы\" },\r\n    {lat:\"48.25\", lon:\"25.1916667\", name:\"Вижница\" },\r\n    {lat:\"48.1485764\", lon:\"26.2572996\", name:\"Герца\" },\r\n    {lat:\"48.5166667\", lon:\"25.85\", name:\"Заставна\" },\r\n    {lat:\"48.4425\", lon:\"25.7613889\", name:\"Кицмань\" },\r\n    {lat:\"48.5833333\", lon:\"27.4333333\", name:\"Новоднестровск\" },\r\n    {lat:\"48.2166667\", lon:\"26.2666667\", name:\"Новоселица\" },\r\n    {lat:\"48.45\", lon:\"27.4166667\", name:\"Сокиряны\" },\r\n    {lat:\"48.1666667\", lon:\"25.7166667\", name:\"Сторожинец\" },\r\n    {lat:\"48.5\", lon:\"26.5\", name:\"Хотин\" },\r\n    {lat:\"48.3\", lon:\"25.9333333\", name:\"Черновцы\" },\r\n];\r\n\r\nexport default function WeatherForm(props) {\r\n    return (\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={top1000Cities}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Город\" variant=\"outlined\" />}\r\n            onChange={(event, newValue) => {\r\n                props.searchWeatherByCoordinates(newValue);\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n        baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n        responseType: \"json\"\r\n    }\r\n)\r\n\r\nexport const weatherAPI = {\r\n\r\n    API_KEY: \"f1b9cc063a5e8272c59b92eed536a26a\",\r\n\r\n    getCityWeather(city) {\r\n        return instance.get(`weather?q=${city}&appid=${this.API_KEY}`)\r\n            .then(response => response);\r\n    },\r\n\r\n    getCoordinatesWeather(lat, lon) {\r\n        return instance.get(`weather?lat=${lat}&lon=${lon}&appid=${this.API_KEY}`)\r\n            .then(response => response);\r\n    },\r\n}\r\n","import {weatherAPI} from \"../API/API\";\r\n\r\nconst CURRENT_CITY_WEATHER_FORECAST = 'CURRENT_CITY_WEATHER_FORECAST';\r\nconst COORDINATE_WEATHER_FORECAST = 'COORDINATE_WEATHER_FORECAST';\r\n\r\nlet initialState = {\r\n    weatherForecast: [],\r\n    currentCityWeatherForecast: {},\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    let stateCopy = {\r\n        ...state,\r\n    };\r\n\r\n    switch (action.type) {\r\n        case CURRENT_CITY_WEATHER_FORECAST:\r\n            stateCopy = {...stateCopy, currentCityWeatherForecast: action.data}\r\n            return stateCopy;\r\n        case COORDINATE_WEATHER_FORECAST:\r\n            stateCopy = {...stateCopy, weatherForecast: [action.data]}\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const searchWeatherByCity = (data) => ({type: CURRENT_CITY_WEATHER_FORECAST, data});\r\nexport const searchWeatherByCoordinates = (data) => ({type: COORDINATE_WEATHER_FORECAST, data});\r\n\r\nexport const searchWeatherByCityThunk = (city) => (dispatch) => {\r\n    return weatherAPI.getCityWeather(city)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                let data = response.data\r\n                dispatch(searchWeatherByCity(data))\r\n            }\r\n        })\r\n}\r\n\r\nexport const searchWeatherByCoordinatesThunk = (lat, lon) => (dispatch) => {\r\n    return weatherAPI.getCoordinatesWeather(lat, lon)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                let data = response.data\r\n                dispatch(searchWeatherByCoordinates(data))\r\n            }\r\n        })\r\n}\r\nexport default weatherReducer;\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport WeatherForm from \"./weatherForm\";\r\nimport {searchWeatherByCityThunk, searchWeatherByCoordinatesThunk} from \"../../redux/weatherReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchWeatherByCity: (city) => {\r\n            dispatch(searchWeatherByCityThunk(city.name));\r\n        },\r\n        searchWeatherByCoordinates: (city) => {\r\n            if (city != null) {\r\n                dispatch(searchWeatherByCoordinatesThunk(city.lat, city.lon));\r\n            }\r\n        }\r\n    }\r\n}\r\nconst WeatherContainerComponent = connect(mapStateToProps, mapDispatchToProps)(WeatherForm);\r\n\r\nexport default WeatherContainerComponent;\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Card, CardActionArea, CardContent, CardMedia, Typography} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 450,\r\n        minWidth: 400,\r\n        marginTop: 100,\r\n\r\n    },\r\n});\r\n\r\nconst WeatherTab = (props) => {\r\n    const classes = useStyles();\r\n\r\n    function FahrenheitToCelsius(tF) {\r\n        return Math.round((tF-273.15)) + String.fromCharCode(176);\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                {(props.data.clouds.all < 35) ?\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Contemplative Reptile\"\r\n                        height=\"140\"\r\n                        image=\"https://i.obozrevatel.com/2019/6/29/kartinki24rusummer65.jpg\"\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                    : (props.data.clouds.all >= 35 && props.data.clouds.all < 70) ?\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Contemplative Reptile\"\r\n                            height=\"140\"\r\n                            image=\"https://total.kz/storage/5a/5adc4197a9f7594c1f390e6b0fe417f8_resize_w_830_h_465.jpg\"\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                        :\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Contemplative Reptile\"\r\n                            height=\"140\"\r\n                            image=\"https://www.total.kz/storage/07/0710d605c50d9239546d9a6a30c069d1_resize_w_830_h_465.jpg\"\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                }\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {props.data.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Облачность {props.data.clouds.all}%<br />\r\n                        Температура:<br />\r\n                        максимальная {FahrenheitToCelsius(props.data.main.temp_max)}<br />\r\n                        минимальная {FahrenheitToCelsius(props.data.main.temp_min)}<br />\r\n                        чувствуються {FahrenheitToCelsius(props.data.main.feels_like)}<br />\r\n                        Давление {Math.round(props.data.main.pressure * 0.750061683)} мм.рт.ст.<br />\r\n                        Влажность {props.data.main.humidity}%\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WeatherTab;\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport WeatherTab from \"./weatherTab\";\r\n\r\nclass WeatherForecastView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    i=1;\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.weatherData.map(forecast => (<WeatherTab key={this.i++} data={forecast} />))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weatherData: state.weather.weatherForecast,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n}\r\nconst WeatherTabContainerComponent = connect(mapStateToProps, mapDispatchToProps)(WeatherForecastView);\r\n\r\nexport default WeatherTabContainerComponent;\r\n","import React from 'react';\r\nimport s from './mainpage.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport WeatherContainerComponent from \"./WeatherForm/WeatherContainerComponent\";\r\nimport WeatherTabContainerComponent from \"./WeatherTab/WeatherTabContainerComponent\";\r\n\r\nclass Content extends React.Component {\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.contentWrapper}>\r\n                <div className={s.input}><WeatherContainerComponent/></div>\r\n                <div className={s.input}><WeatherTabContainerComponent/></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n});\r\n\r\n\r\nexport const ContentContainer = connect(mapStateToProps, {}) (Content);\r\n","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nclass Maps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    default = {\r\n        center: {\r\n            lat: 50.45,\r\n            lng: 30.52,\r\n        },\r\n        zoom: 11\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ height: '50vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyC5VaQjjPJrlPA4q755dYVtqoFAW3CXIYI\" }}\r\n                    defaultCenter={this.default.center}\r\n                    defaultZoom={this.default.zoom}\r\n                    onClick={(childProps) => this.props.searchWeatherByCoordinates({lat: childProps.lat, lon: childProps.lng})}\r\n                >\r\n                </GoogleMapReact>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Maps;","import {connect} from \"react-redux\";\r\nimport {searchWeatherByCityThunk, searchWeatherByCoordinatesThunk} from \"../../redux/weatherReducer\";\r\nimport Maps from \"./map\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchWeatherByCity: (city) => {\r\n            dispatch(searchWeatherByCityThunk(city.name));\r\n        },\r\n        searchWeatherByCoordinates: (city) => {\r\n            if (city != null) {\r\n                dispatch(searchWeatherByCoordinatesThunk(city.lat, city.lon));\r\n            }\r\n        }\r\n    }\r\n}\r\nconst WeatherMapContainerComponent = connect(mapStateToProps, mapDispatchToProps)(Maps);\r\n\r\nexport default WeatherMapContainerComponent;","import './App.css';\nimport React from \"react\";\nimport {ContentContainer} from \"./content/mainPage\";\nimport WeatherMapContainerComponent from \"./content/WeatherGoogleMap/mapContainerComponent\";\n\nfunction App() {\n    return (\n            <div className=\"app-wrapper\">\n                <ContentContainer className=\"app-autocomplete\"/>\n                <WeatherMapContainerComponent className=\"app-map\"/>\n            </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    weather: weatherReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/reduxStore\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n\n    <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"mainpage_contentWrapper__2Fghj\",\"input\":\"mainpage_input__PquhF\",\"complete\":\"mainpage_complete__3sfHo\",\"uncomplete\":\"mainpage_uncomplete__1JC9T\",\"batchDelete\":\"mainpage_batchDelete__34QOB\"};"],"sourceRoot":""}